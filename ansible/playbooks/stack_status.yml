---
  - hosts: loadbalancer
    become: true
    gather_facts: false
    tasks:
      - name: Verify nginx service
        command:
          cmd: service nginx status
        changed_when: false

      - name: Verify nginx is listening on port 80
        wait_for:
          port: 80
          timeout: 1

  - hosts: webserver
    become: true
    gather_facts: false
    tasks:
      - name: Verify apache2 service
        command:
          cmd: service apache2 status
        changed_when: false

      - name: Verify apache2 is listening on port 80
        wait_for:
          port: 80
          timeout: 1

  - hosts: database
    become: true
    gather_facts: false
    tasks:
      - name: Verify MySQL service
        command:
          cmd: service mysql status
        changed_when: false

      - name: Verify MySQL is listening on port 3306
        wait_for:
          port: 3306
          timeout: 1

  - hosts: control
    gather_facts: false
    tasks:
      - name: Verify end-to-end response
        uri:
          url: "http://{{ item }}"
          return_content: yes
        loop: "{{ groups['loadbalancer'] }}"
        register: lb_index

      - name: Check content of the end-to-end response
        fail:
          msg: "index failed to return content"
        when: "'Hello, from sunny' not in item.content"
        loop: "{{ lb_index.results }}"

      - name: Verify end-to-end db response
        uri:
          url: "http://{{ item }}/db"
          return_content: yes
        loop: "{{ groups['loadbalancer'] }}"
        register: lb_db

      - name: Check content of the end-to-end db response
        fail:
          msg: "db failed to return content"
        when: "'Database Connected from' not in item.content"
        loop: "{{ lb_db.results }}"

  - hosts: loadbalancer
    gather_facts: false
    tasks:
      - name: Verify backend response
        uri:
          url: "http://{{ item }}"
          return_content: yes
        loop: "{{ groups['webserver'] }}"
        register: app_index

      - name: Check content of the backend response
        fail:
          msg: "webserver failed to return content"
        when: "'Hello, from sunny ' ~ item.item not in item.content"
        loop: "{{ app_index.results }}"

      - name: Verify backend db response
        uri:
          url: "http://{{ item }}/db"
          return_content: yes
        loop: "{{ groups['webserver'] }}"
        register: app_db

      - name: Check content of the db backend response
        fail:
          msg: "db failed to return content"
        when: "'Database Connected from ' ~ item.item not in item.content"
        loop: "{{ app_db.results }}"
